"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Этот тест проверяет возможность создания заказа с авторизацией. Проверяются все основные поля ответа, включая ID, статус и цену.","3318","Создание заказа с авторизацией и с ингредиентами","","Sun Jan 19 19:24:11 CET 2025","passed","Sun Jan 19 19:24:14 CET 2025","","praktikum.CreateOrderTest","praktikum.CreateOrderTest","createOrderWithAuthorization"
"Этот тест проверяет, что при логине с пустым email, паролем или именем возвращается ошибка","1744","Попытка логина с некорректными данными","","Sun Jan 19 19:24:00 CET 2025","passed","Sun Jan 19 19:24:02 CET 2025","","praktikum.InvalidUserLoginParameterizedTest","praktikum.InvalidUserLoginParameterizedTest","userLoginWithInvalidData[Тест - логин с неверным логином и паролем, индекс: 2]"
"Этот тест проверяет, что при логине с пустым email, паролем или именем возвращается ошибка","1227","Попытка логина с некорректными данными","","Sun Jan 19 19:23:59 CET 2025","passed","Sun Jan 19 19:24:00 CET 2025","","praktikum.InvalidUserLoginParameterizedTest","praktikum.InvalidUserLoginParameterizedTest","userLoginWithInvalidData[Тест - логин с неверным логином и паролем, индекс: 1]"
"Этот тест проверяет, что создание заказа с неверным Hash ингредиента возвращает ошибку с кодом 500. Это серый случай, так как 500 обычно не ожидается.","1237","Создание заказа с неверным Hash ингредиента","","Sun Jan 19 19:24:07 CET 2025","passed","Sun Jan 19 19:24:08 CET 2025","","praktikum.CreateOrderTest","praktikum.CreateOrderTest","createOrderWithWrongHashForIngredients"
"Этот тест проверяет, что при логине с пустым email, паролем или именем возвращается ошибка","1167","Попытка логина с некорректными данными","","Sun Jan 19 19:23:58 CET 2025","passed","Sun Jan 19 19:23:59 CET 2025","","praktikum.InvalidUserLoginParameterizedTest","praktikum.InvalidUserLoginParameterizedTest","userLoginWithInvalidData[Тест - логин с неверным логином и паролем, индекс: 0]"
"Этот тест проверяет, что можно изменить имя пользователя с авторизацией","1252","Изменение имени с авторизацией","","Sun Jan 19 19:24:24 CET 2025","passed","Sun Jan 19 19:24:25 CET 2025","","praktikum.EditUserDataWithAuthorizationTest","praktikum.EditUserDataWithAuthorizationTest","editUserDataWithAuthorizationNameChange"
"Этот тест проверяет, что при попытке изменить данные пользователя без авторизации возвращается ошибка","581","Изменение данных пользователя без авторизации","","Sun Jan 19 19:23:56 CET 2025","passed","Sun Jan 19 19:23:56 CET 2025","","praktikum.EditUserDataWithoutAuthorizationTest","praktikum.EditUserDataWithoutAuthorizationTest","shouldReturnErrorWhenEditingWithoutAuthorization[Тест с набором данных для изменения данных пользователя без авторизации: UserModel{email='null', password='null', name='Pomenyalkin'}]"
"Этот тест проверяет возможность логина с корректными данными существующего пользователя","4286","Логин под существующим пользователем","","Sun Jan 19 19:23:45 CET 2025","passed","Sun Jan 19 19:23:50 CET 2025","","praktikum.LoginUserTest","praktikum.LoginUserTest","userLogin"
"Этот тест проверяет, что при попытке изменить данные пользователя без авторизации возвращается ошибка","282","Изменение данных пользователя без авторизации","","Sun Jan 19 19:23:56 CET 2025","passed","Sun Jan 19 19:23:56 CET 2025","","praktikum.EditUserDataWithoutAuthorizationTest","praktikum.EditUserDataWithoutAuthorizationTest","shouldReturnErrorWhenEditingWithoutAuthorization[Тест с набором данных для изменения данных пользователя без авторизации: UserModel{email='null', password='menyaem', name='null'}]"
"Этот тест проверяет, что при попытке создать пользователя с отсутствующим email, паролем или именем возвращается ошибка","269","Создание пользователя с отсутствующим обязательным полем","","Sun Jan 19 19:23:57 CET 2025","passed","Sun Jan 19 19:23:58 CET 2025","","praktikum.InvalidUserCreationParameterizedTest","praktikum.InvalidUserCreationParameterizedTest","shouldReturnErrorForInvalidUser[Тест - создать пользователя и не заполнить одно из обязательных полей, индекс: 2]"
"Этот тест проверяет, что при попытке создать пользователя с отсутствующим email, паролем или именем возвращается ошибка","461","Создание пользователя с отсутствующим обязательным полем","","Sun Jan 19 19:23:57 CET 2025","passed","Sun Jan 19 19:23:57 CET 2025","","praktikum.InvalidUserCreationParameterizedTest","praktikum.InvalidUserCreationParameterizedTest","shouldReturnErrorForInvalidUser[Тест - создать пользователя и не заполнить одно из обязательных полей, индекс: 1]"
"Этот тест проверяет возможность создания заказа без авторизации. Проверяется успешный ответ с полями name и order.","1234","Создание заказа без авторизации","","Sun Jan 19 19:24:08 CET 2025","passed","Sun Jan 19 19:24:09 CET 2025","","praktikum.CreateOrderTest","praktikum.CreateOrderTest","createOrderWithoutAuthorization"
"Этот тест проверяет, что при попытке создать пользователя с отсутствующим email, паролем или именем возвращается ошибка","499","Создание пользователя с отсутствующим обязательным полем","","Sun Jan 19 19:23:56 CET 2025","passed","Sun Jan 19 19:23:57 CET 2025","","praktikum.InvalidUserCreationParameterizedTest","praktikum.InvalidUserCreationParameterizedTest","shouldReturnErrorForInvalidUser[Тест - создать пользователя и не заполнить одно из обязательных полей, индекс: 0]"
"Этот тест проверяет, что создание заказа без указания ингредиентов возвращает ошибку с кодом 400.","1281","Создание заказа без ингредиентов","","Sun Jan 19 19:24:09 CET 2025","passed","Sun Jan 19 19:24:11 CET 2025","","praktikum.CreateOrderTest","praktikum.CreateOrderTest","createOrderWithoutIngredients"
"Этот тест проверяет возможность получения полного списка заказов без авторизации","1601","Получение всех заказов неавторизованным пользователем","","Sun Jan 19 19:24:32 CET 2025","passed","Sun Jan 19 19:24:34 CET 2025","","praktikum.GetOrderDataTest","praktikum.GetOrderDataTest","getFullOrderListForNotAuthorizedUser"
"Этот тест проверяет, что можно изменить пароль пользователя с авторизацией","1328","Изменение пароля с авторизацией","","Sun Jan 19 19:24:21 CET 2025","passed","Sun Jan 19 19:24:23 CET 2025","","praktikum.EditUserDataWithAuthorizationTest","praktikum.EditUserDataWithAuthorizationTest","editUserDataWithAuthorizationPasswordChange"
"Этот тест проверяет возможность создания пользователя с валидными данными","1093","Создание уникального пользователя","","Sun Jan 19 19:24:20 CET 2025","passed","Sun Jan 19 19:24:21 CET 2025","","praktikum.CreateUserTest","praktikum.CreateUserTest","uniqueUserCreating"
"Этот тест проверяет, что при повторной регистрации одного и того же пользователя возвращается ошибка","1271","Создание дублирующегося пользователя","","Sun Jan 19 19:24:19 CET 2025","passed","Sun Jan 19 19:24:20 CET 2025","","praktikum.CreateUserTest","praktikum.CreateUserTest","duplicateUserCreationReturnsError"
"Этот тест проверяет, что при попытке изменить данные пользователя без авторизации возвращается ошибка","933","Изменение данных пользователя без авторизации","","Sun Jan 19 19:23:50 CET 2025","passed","Sun Jan 19 19:23:51 CET 2025","","praktikum.EditUserDataWithoutAuthorizationTest","praktikum.EditUserDataWithoutAuthorizationTest","shouldReturnErrorWhenEditingWithoutAuthorization[Тест с набором данных для изменения данных пользователя без авторизации: UserModel{email='pomenyali@pomenyalkin.ru', password='null', name='null'}]"
"Этот тест проверяет возможность получения списка заказов конкретного пользователя с авторизацией","2313","Получение заказов авторизованного пользователя","","Sun Jan 19 19:24:30 CET 2025","passed","Sun Jan 19 19:24:32 CET 2025","","praktikum.GetOrderDataTest","praktikum.GetOrderDataTest","getOrderListForAuthorizedUser"
"Этот тест проверяет, что можно изменить email пользователя с авторизацией","1185","Изменение email с авторизацией","","Sun Jan 19 19:24:23 CET 2025","passed","Sun Jan 19 19:24:24 CET 2025","","praktikum.EditUserDataWithAuthorizationTest","praktikum.EditUserDataWithAuthorizationTest","editUserDataWithAuthorizationEmailChange"
